version: '3.8'

services:
  tier-app:
    container_name: tier-app
    build:
      context: .
      target: development
    volumes:
      - .:/usr/src/tier-app
      - /usr/src/tier-app/node_modules
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    extra_hosts:
      - host.docker.internal:host-gateway
    command: npm run start:js:watch
    env_file:
      - .env
    networks:
      - tier
    depends_on:
      - redis
      - postgres
      - rabbitmq

  redis:
    container_name: redis
    image: redis:7
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redisdata:/data
    networks:
      - tier

  redis-commander:
     container_name: redis-commander
     image: rediscommander/redis-commander:latest
     environment:
       - REDIS_HOSTS=local:redis:6379:1
     ports:
       - 8081:8081
     networks:
       - tier
     depends_on:
       - redis

  postgres:
    container_name: postgres
    image: postgres:14.3
    networks:
      - tier
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      PG_DATA: /var/lib/postgresql/data
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8-management
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - tier

networks:
  tier:

volumes:
  pgdata:
  redisdata:
  rabbitmqdata:
